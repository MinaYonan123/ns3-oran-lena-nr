def build(bld):
    # Base examples
    base_examples = [
        'cttc-3gpp-channel-example',
        'cttc-3gpp-channel-simple-ran',
        'cttc-3gpp-channel-simple-fdm',
        'cttc-3gpp-indoor-calibration',
        'cttc-3gpp-channel-nums',
        'cttc-3gpp-channel-nums-fdm',
        'cttc-nr-cc-bwp-demo',
        'cttc-lte-ca-demo',
        'cttc-nr-demo',
        'cttc-error-model',
        'cttc-error-model-amc',
        'cttc-error-model-comparison',
        'cttc-channel-randomness',
        'rem-example',
        'rem-beam-example',
        'cttc-nr-notching',
        'cttc-nr-traffic-ngmn-mixed',
        'cttc-nr-traffic-3gpp-xr',
        'traffic-generator-example',
        'cttc-nr-simple-qos-sched',
        'cttc-nr-multi-flow-qos-sched'
    ]

    # Add base examples
    for example in base_examples:
        bld.program(
            features='cxx',
            target=example,
            source=f'{example}.cc',
            use='nr flow-monitor'
        )

    # Special case: cttc-fh-compression
    bld.program(
        features='cxx',
        target='cttc-fh-compression',
        source='cttc-fh-compression.cc',
        use='nr lte'
    )

    # Eigen-dependent examples
    if bld.env.ENABLE_EIGEN:
        eigen_dependent_examples = [
            'cttc-nr-mimo-demo',
            'cttc-nr-fh-xr'
        ]
        for example in eigen_dependent_examples:
            bld.program(
                features='cxx',
                target=example,
                source=f'{example}.cc',
                use='nr flow-monitor'
            )

    # SQLite-dependent examples
    if not bld.env.ENABLE_SQLITE:
        bld.fatal('Some examples require SQLite support.')
    else:
        lena_lte_comparison_examples = [
            'lena-lte-comparison-user',
            'lena-lte-comparison-campaign'
        ]
        lena_lte_comparison_source_files = [
            'lena-lte-comparison/lena-lte-comparison.cc',
            'lena-lte-comparison/sinr-output-stats.cc',
            'lena-lte-comparison/flow-monitor-output-stats.cc',
            'lena-lte-comparison/power-output-stats.cc',
            'lena-lte-comparison/slot-output-stats.cc',
            'lena-lte-comparison/lena-v1-utils.cc',
            'lena-lte-comparison/lena-v2-utils.cc',
            'lena-lte-comparison/rb-output-stats.cc'
        ]

        for example in lena_lte_comparison_examples:
            bld.program(
                features='cxx',
                target=example,
                source=[f'lena-lte-comparison/{example}.cc'] + lena_lte_comparison_source_files,
                use='nr flow-monitor stats lte'
            )

        # 3GPP outdoor calibration examples
        calibration_source_files = [
            '3gpp-outdoor-calibration/cttc-nr-3gpp-calibration.cc',
            '3gpp-outdoor-calibration/sinr-output-stats.cc',
            '3gpp-outdoor-calibration/flow-monitor-output-stats.cc',
            '3gpp-outdoor-calibration/power-output-stats.cc',
            '3gpp-outdoor-calibration/slot-output-stats.cc',
            '3gpp-outdoor-calibration/rb-output-stats.cc',
            '3gpp-outdoor-calibration/cttc-nr-3gpp-calibration-utils-v1.cc',
            '3gpp-outdoor-calibration/cttc-nr-3gpp-calibration-utils-v2.cc'
        ]

        bld.program(
            features='cxx',
            target='cttc-nr-3gpp-calibration-user',
            source=['3gpp-outdoor-calibration/cttc-nr-3gpp-calibration-user.cc'] + calibration_source_files,
            use='nr flow-monitor stats lte'
        )

        # Realistic beamforming example
        bld.program(
            features='cxx',
            target='cttc-realistic-beamforming',
            source='cttc-realistic-beamforming.cc',
            use='nr flow-monitor sqlite3'
        )
